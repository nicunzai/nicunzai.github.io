[33mcommit ad41ee0a2304f8cc7754a25128b635ce66621dc9[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: nicunzai <1044991756@qq.com>
Date:   Mon May 21 11:13:42 2018 +0800

    ä¿®æ”¹äº†é¦–é¡µ

[1mdiff --git a/asset/particles.js b/asset/particles.js[m
[1mnew file mode 100644[m
[1mindex 0000000..325d834[m
[1m--- /dev/null[m
[1m+++ b/asset/particles.js[m
[36m@@ -0,0 +1,1541 @@[m
[32m+[m[32m/* -----------------------------------------------[m
[32m+[m[32m/* Author : Vincent Garreau  - vincentgarreau.com[m
[32m+[m[32m/* MIT license: http://opensource.org/licenses/MIT[m
[32m+[m[32m/* Demo / Generator : vincentgarreau.com/particles.js[m
[32m+[m[32m/* GitHub : github.com/VincentGarreau/particles.js[m
[32m+[m[32m/* How to use? : Check the GitHub README[m
[32m+[m[32m/* v2.0.0[m
[32m+[m[32m/* ----------------------------------------------- */[m
[32m+[m
[32m+[m[32mvar pJS = function(tag_id, params){[m
[32m+[m
[32m+[m[32m  var canvas_el = document.querySelector('#'+tag_id+' > .particles-js-canvas-el');[m
[32m+[m
[32m+[m[32m  /* particles.js variables with default values */[m
[32m+[m[32m  this.pJS = {[m
[32m+[m[32m    canvas: {[m
[32m+[m[32m      el: canvas_el,[m
[32m+[m[32m      w: canvas_el.offsetWidth,[m
[32m+[m[32m      h: canvas_el.offsetHeight[m
[32m+[m[32m    },[m
[32m+[m[32m    particles: {[m
[32m+[m[32m      number: {[m
[32m+[m[32m        value: 400,[m
[32m+[m[32m        density: {[m
[32m+[m[32m          enable: true,[m
[32m+[m[32m          value_area: 800[m
[32m+[m[32m        }[m
[32m+[m[32m      },[m
[32m+[m[32m      color: {[m
[32m+[m[32m        value: '#fff'[m
[32m+[m[32m      },[m
[32m+[m[32m      shape: {[m
[32m+[m[32m        type: 'circle',[m
[32m+[m[32m        stroke: {[m
[32m+[m[32m          width: 0,[m
[32m+[m[32m          color: '#ff0000'[m
[32m+[m[32m        },[m
[32m+[m[32m        polygon: {[m
[32m+[m[32m          nb_sides: 5[m
[32m+[m[32m        },[m
[32m+[m[32m        image: {[m
[32m+[m[32m          src: '',[m
[32m+[m[32m          width: 100,[m
[32m+[m[32m          height: 100[m
[32m+[m[32m        }[m
[32m+[m[32m      },[m
[32m+[m[32m      opacity: {[m
[32m+[m[32m        value: 1,[m
[32m+[m[32m        random: false,[m
[32m+[m[32m        anim: {[m
[32m+[m[32m          enable: false,[m
[32m+[m[32m          speed: 2,[m
[32m+[m[32m          opacity_min: 0,[m
[32m+[m[32m          sync: false[m
[32m+[m[32m        }[m
[32m+[m[32m      },[m
[32m+[m[32m      size: {[m
[32m+[m[32m        value: 20,[m
[32m+[m[32m        random: false,[m
[32m+[m[32m        anim: {[m
[32m+[m[32m          enable: false,[m
[32m+[m[32m          speed: 20,[m
[32m+[m[32m          size_min: 0,[m
[32m+[m[32m          sync: false[m
[32m+[m[32m        }[m
[32m+[m[32m      },[m
[32m+[m[32m      line_linked: {[m
[32m+[m[32m        enable: true,[m
[32m+[m[32m        distance: 100,[m
[32m+[m[32m        color: '#fff',[m
[32m+[m[32m        opacity: 1,[m
[32m+[m[32m        width: 1[m
[32m+[m[32m      },[m
[32m+[m[32m      move: {[m
[32m+[m[32m        enable: true,[m
[32m+[m[32m        speed: 2,[m
[32m+[m[32m        direction: 'none',[m
[32m+[m[32m        random: false,[m
[32m+[m[32m        straight: false,[m
[32m+[m[32m        out_mode: 'out',[m
[32m+[m[32m        bounce: false,[m
[32m+[m[32m        attract: {[m
[32m+[m[32m          enable: false,[m
[32m+[m[32m          rotateX: 3000,[m
[32m+[m[32m          rotateY: 3000[m
[32m+[m[32m        }[m
[32m+[m[32m      },[m
[32m+[m[32m      array: [][m
[32m+[m[32m    },[m
[32m+[m[32m    interactivity: {[m
[32m+[m[32m      detect_on: 'canvas',[m
[32m+[m[32m      events: {[m
[32m+[m[32m        onhover: {[m
[32m+[m[32m          enable: true,[m
[32m+[m[32m          mode: 'grab'[m
[32m+[m[32m        },[m
[32m+[m[32m        onclick: {[m
[32m+[m[32m          enable: true,[m
[32m+[m[32m          mode: 'push'[m
[32m+[m[32m        },[m
[32m+[m[32m        resize: true[m
[32m+[m[32m      },[m
[32m+[m[32m      modes: {[m
[32m+[m[32m        grab:{[m
[32m+[m[32m          distance: 100,[m
[32m+[m[32m          line_linked:{[m
[32m+[m[32m            opacity: 1[m
[32m+[m[32m          }[m
[32m+[m[32m        },[m
[32m+[m[32m        bubble:{[m
[32m+[m[32m          distance: 200,[m
[32m+[m[32m          size: 80,[m
[32m+[m[32m          duration: 0.4[m
[32m+[m[32m        },[m
[32m+[m[32m        repulse:{[m
[32m+[m[32m          distance: 200,[m
[32m+[m[32m          duration: 0.4[m
[32m+[m[32m        },[m
[32m+[m[32m        push:{[m
[32m+[m[32m          particles_nb: 4[m
[32m+[m[32m        },[m
[32m+[m[32m        remove:{[m
[32m+[m[32m          particles_nb: 2[m
[32m+[m[32m        }[m
[32m+[m[32m      },[m
[32m+[m[32m      mouse:{}[m
[32m+[m[32m    },[m
[32m+[m[32m    retina_detect: false,[m
[32m+[m[32m    fn: {[m
[32m+[m[32m      interact: {},[m
[32m+[m[32m      modes: {},[m
[32m+[m[32m      vendors:{}[m
[32m+[m[32m    },[m
[32m+[m[32m    tmp: {}[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  var pJS = this.pJS;[m
[32m+[m
[32m+[m[32m  /* params settings */[m
[32m+[m[32m  if(params){[m
[32m+[m[32m    Object.deepExtend(pJS, params);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  pJS.tmp.obj = {[m
[32m+[m[32m    size_value: pJS.particles.size.value,[m
[32m+[m[32m    size_anim_speed: pJS.particles.size.anim.speed,[m
[32m+[m[32m    move_speed: pJS.particles.move.speed,[m
[32m+[m[32m    line_linked_distance: pJS.particles.line_linked.distance,[m
[32m+[m[32m    line_linked_width: pJS.particles.line_linked.width,[m
[32m+[m[32m    mode_grab_distance: pJS.interactivity.modes.grab.distance,[m
[32m+[m[32m    mode_bubble_distance: pJS.interactivity.modes.bubble.distance,[m
[32m+[m[32m    mode_bubble_size: pJS.interactivity.modes.bubble.size,[m
[32m+[m[32m    mode_repulse_distance: pJS.interactivity.modes.repulse.distance[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m
[32m+[m[32m  pJS.fn.retinaInit = function(){[m
[32m+[m
[32m+[m[32m    if(pJS.retina_detect && window.devicePixelRatio > 1){[m
[32m+[m[32m      pJS.canvas.pxratio = window.devicePixelRatio;[m[41m [m
[32m+[m[32m      pJS.tmp.retina = true;[m
[32m+[m[32m    }[m[41m [m
[32m+[m[32m    else{[m
[32m+[m[32m      pJS.canvas.pxratio = 1;[m
[32m+[m[32m      pJS.tmp.retina = false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;[m
[32m+[m
[32m+[m[32m    pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;[m
[32m+[m[32m    pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;[m
[32m+[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m  /* ---------- pJS functions - canvas ------------ */[m
[32m+[m
[32m+[m[32m  pJS.fn.canvasInit = function(){[m
[32m+[m[32m    pJS.canvas.ctx = pJS.canvas.el.getContext('2d');[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  pJS.fn.canvasSize = function(){[m
[32m+[m
[32m+[m[32m    pJS.canvas.el.width = pJS.canvas.w;[m
[32m+[m[32m    pJS.canvas.el.height = pJS.canvas.h;[m
[32m+[m
[32m+[m[32m    if(pJS && pJS.interactivity.events.resize){[m
[32m+[m
[32m+[m[32m      window.addEventListener('resize', function(){[m
[32m+[m
[32m+[m[32m          pJS.canvas.w = pJS.canvas.el.offsetWidth;[m
[32m+[m[32m          pJS.canvas.h = pJS.canvas.el.offsetHeight;[m
[32m+[m
[32m+[m[32m          /* resize canvas */[m
[32m+[m[32m          if(pJS.tmp.retina){[m
[32m+[m[32m            pJS.canvas.w *= pJS.canvas.pxratio;[m
[32m+[m[32m            pJS.canvas.h *= pJS.canvas.pxratio;[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          pJS.canvas.el.width = pJS.canvas.w;[m
[32m+[m[32m          pJS.canvas.el.height = pJS.canvas.h;[m
[32m+[m
[32m+[m[32m          /* repaint canvas on anim disabled */[m
[32m+[m[32m          if(!pJS.particles.move.enable){[m
[32m+[m[32m            pJS.fn.particlesEmpty();[m
[32m+[m[32m            pJS.fn.particlesCreate();[m
[32m+[m[32m            pJS.fn.particlesDraw();[m
[32m+[m[32m            pJS.fn.vendors.densityAutoParticles();[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m        /* density particles enabled */[m
[32m+[m[32m        pJS.fn.vendors.densityAutoParticles();[m
[32m+[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m
[32m+[m[32m  pJS.fn.canvasPaint = function(){[m
[32m+[m[32m    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  pJS.fn.canvasClear = function(){[m
[32m+[m[32m    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m
[32m+[m[32m  /* --------- pJS functions - particles ----------- */[m
[32m+[m
[32m+[m[32m  pJS.fn.particle = function(color, opacity, position){[m
[32m+[m
[32m+[m[32m    /* size */[m
[32m+[m[32m    this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;[m
[32m+[m[32m    if(pJS.particles.size.anim.enable){[m
[32m+[m[32m      this.size_status = false;[m
[32m+[m[32m      this.vs = pJS.particles.size.anim.speed / 100;[m
[32m+[m[32m      if(!pJS.particles.size.anim.sync){[m
[32m+[m[32m        this.vs = this.vs * Math.random();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /* position */[m
[32m+[m[32m    this.x = position ? position.x : Math.random() * pJS.canvas.w;[m
[32m+[m[32m    this.y = position ? position.y : Math.random() * pJS.canvas.h;[m
[32m+[m
[32m+[m[32m    /* check position  - into the canvas */[m
[32m+[m[32m    if(this.x > pJS.canvas.w - this.radius*2) this.x = this.x - this.radius;[m
[32m+[m[32m    else if(this.x < this.radius*2) this.x = this.x + this.radius;[m
[32m+[m[32m    if(this.y > pJS.canvas.h - this.radius*2) this.y = this.y - this.radius;[m
[32m+[m[32m    else if(this.y < this.radius*2) this.y = this.y + this.radius;[m
[32m+[m
[32m+[m[32m    /* check position - avoid overlap */[m
[32m+[m[32m    if(pJS.particles.move.bounce){[m
[32m+[m[32m      pJS.fn.vendors.checkOverlap(this, position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /* color */[m
[32m+[m[32m    this.color = {};[m
[32m+[m[32m    if(typeof(color.value) == 'object'){[m
[32m+[m
[32m+[m[32m      if(color.value instanceof Array){[m
[32m+[m[32m        var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];[m
[32m+[m[32m        this.color.rgb = hexToRgb(color_selected);[m
[32m+[m[32m      }else{[m
[32m+[m[32m        if(color.value.r != undefined && color.value.g != undefined && color.value.b != undefined){[m
[32m+[m[32m          this.color.rgb = {[m
[32m+[m[32m            r: color.value.r,[m
[32m+[m[32m            g: color.value.g,[m
[32m+[m[32m            b: color.value.b[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m        if(color.value.h != undefined && color.value.s != undefined && color.value.l != undefined){[m
[32m+[m[32m          this.color.hsl = {[m
[32m+[m[32m            h: color.value.h,[m
[32m+[m[32m            s: color.value.s,[m
[32m+[m[32m            l: color.value.l[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m    else if(color.value == 'random'){[m
[32m+[m[32m      this.color.rgb = {[m
[32m+[m[32m        r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),[m
[32m+[m[32m        g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),[m
[32m+[m[32m        b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if(typeof(color.value) == 'string'){[m
[32m+[m[32m      this.color = color;[m
[32m+[m[32m      this.color.rgb = hexToRgb(this.color.value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /* opacity */[m
[32m+[m[32m    this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;[m
[32m+[m[32m    if(pJS.particles.opacity.anim.enable){[m
[32m+[m[32m      this.opacity_status = false;[m
[32m+[m[32m      this.vo = pJS.particles.opacity.anim.speed / 100;[m
[32m+[m[32m      if(!pJS.particles.opacity.anim.sync){[m
[32m+[m[32m        this.vo = this.vo * Math.random();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /* animation - velocity for speed */[m
[32m+[m[32m    var velbase = {}[m
[32m+[m[32m    switch(pJS.particles.move.direction){[m
[32m+[m[32m      case 'top':[m
[32m+[m[32m        velbase = { x:0, y:-1 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'top-right':[m
[32m+[m[32m        velbase = { x:0.5, y:-0.5 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'right':[m
[32m+[m[32m        velbase = { x:1, y:-0 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'bottom-right':[m
[32m+[m[32m        velbase = { x:0.5, y:0.5 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'bottom':[m
[32m+[m[32m        velbase = { x:0, y:1 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'bottom-left':[m
[32m+[m[32m        velbase = { x:-0.5, y:1 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'left':[m
[32m+[m[32m        velbase = { x:-1, y:0 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      case 'top-left':[m
[32m+[m[32m        velbase = { x:-0.5, y:-0.5 };[m
[32m+[m[32m      break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        velbase = { x:0, y:0 };[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if(pJS.particles.move.straight){[m
[32m+[m[32m      this.vx = velbase.x;[m
[32m+[m[32m      this.vy = velbase.y;[m
[32m+[m[32m      if(pJS.particles.move.random){[m
[32m+[m[32m        this.vx = this.vx * (Math.random());[m
[32m+[m[32m        this.vy = this.vy * (Math.random());[m
[32m+[m[32m      }[m
[32m+[m[32m    }else{[m
[32m+[m[32m      this.vx = velbase.x + Math.random()-0.5;[m
[32m+[m[32m      this.vy = velbase.y + Math.random()-0.5;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // var theta = 2.0 * Math.PI * Math.random();[m
[32m+[m[32m    // this.vx = Math.cos(theta);[m
[32m+[m[32m    // this.vy = Math.sin(theta);[m
[32m+[m
[32m+[m[32m    this.vx_i = this.vx;[m
[32m+[m[32m    this.vy_i = this.vy;[m
[32m+[m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32m    /* if shape is image */[m
[32m+[m
[32m+[m[32m    var shape_type = pJS.particles.shape.type;[m
[32m+[m[32m    if(typeof(shape_type) == 'object'){[m
[32m+[m[32m      if(shape_type instanceof Array){[m
[32m+[m[32m        var shape_selected = shape_type[Math.floor(Math